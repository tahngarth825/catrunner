{"version":3,"sources":["webpack:///webpack/bootstrap 79ac1a11f19202e24c8f","webpack:///./lib/catRunner.js","webpack:///./lib/game.js","webpack:///./lib/car.js","webpack:///./lib/util.js","webpack:///./lib/movingObject.js","webpack:///./lib/constants.js","webpack:///./lib/cat.js","webpack:///./lib/board.js","webpack:///./lib/gameView.js","webpack:///./lib/gameVariables.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA2C,uBAAuB;;AAElE;AACA;AACA;;AAEA;AACA,yBAAwB,kBAAkB;;AAE1C;AACA;;AAEA,2BAA0B,kBAAkB;AAC5C,IAAG;AACH,EAAC;;;;;;;AC1BD;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB,WAAW;AACjC;AACA;AACA,wBAAuB;AACvB;AACA;AACA;;AAEA;AACA,iCAAgC,mCAAmC;AACnE,6BAA4B,iCAAiC;AAC7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,+BAA8B,iCAAiC;AAC/D,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACjGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB;AACnB;AACA;AACA,gBAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;;AAEA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA,4BAA2B,+BAA+B;AAC1D;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;AC1CA;AACA;;AAEA;AACA,0BAAyB;AACzB,0BAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;AC9CA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,UAAU;AAC3B;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,UAAU;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;ACpDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAwB,gBAAgB,EAAE,EAAE;AAC5C,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,8BAA6B,oCAAoC;AACjE;AACA;AACA;;AAEA,sCAAqC,gBAAgB;AACrD;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC,gBAAgB;AACrD;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC,gBAAgB;;AAErD,oCAAmC;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;;;;;;;AC7GA;AACA,sBAAqB;AACrB;AACA;AACA,4BAA2B;AAC3B;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 79ac1a11f19202e24c8f\n **/","const Game = require(\"./game\");\nconst GameView = require(\"./gameView\");\nconst Constants = require(\"./constants.js\");\nconst GameVariables = require(\"./gameVariables.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  let canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Constants.DIM_X;\n  canvasEl.height = Constants.DIM_Y;\n\n  GameVariables.level = document.getElementById(\"level\");\n  GameVariables.bestTimeDiv = document.getElementById(\"best-time\");\n  GameVariables.bestTimeDiv.innerHTML = `${GameVariables.bestTime} seconds`;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n\n  let header = document.getElementById(\"timer\");\n  header.innerHTML = `${GameVariables.sec} seconds`;\n\n  GameVariables.timer = window.setInterval(function() {\n    GameVariables.sec++;\n\n    header.innerHTML = `${GameVariables.sec} seconds`;\n  }, 1000);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/catRunner.js\n ** module id = 0\n ** module chunks = 0\n **/","const Car = require(\"./car\");\nconst Cat = require(\"./cat\");\nconst Board = require(\"./board.js\");\nconst Constants = require(\"./constants.js\");\n\nconst Game = function () {\n  this.cars = [];\n  this.cat = new Cat({game: this});\n  this.level = 1;\n  this.gridSize = [11, 11];\n  this.squareSize = 50; //In grid, size of square\n  this.board = new Board(this);\n  this.addCars();\n};\n\nGame.prototype.addCars = function () {\n  for (let i = this.cars.length; i < Constants.NUM_CARS*this.level; i++) {\n    this.cars.push(new Car({ game: this, carType: undefined }));\n  }\n};\n\nGame.prototype.resetCars = function () {\n  this.cars = [];\n  this.addCars();\n};\n\nGame.prototype.allObjects = function () {\n  if (this.cat !== undefined){\n    return [this.cat].concat(this.cars);\n  } else {\n    return this.cars;\n  }\n};\n\nGame.prototype.checkCollisions = function (callback) {\n  const game = this;\n\n  game.cars.forEach(function (car) {\n    if (car.isCollidedWith(game.cat)){\n      callback();\n    }\n  });\n};\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, Constants.DIM_X, Constants.DIM_Y);\n  ctx.fillStyle = Constants.BACKGROUND;\n  ctx.fillRect(0, 0, Constants.DIM_X, Constants.DIM_Y);\n\n  this.board.draw(ctx);\n\n  this.allObjects().forEach(function (object) {\n    object.draw(ctx);\n  });\n};\n\n//pos is top-left corner of object, so cannot be on bottom-right of game\nGame.prototype.isOutOfBounds = function (pos) {\n  let result = false;\n\n  if ( (pos[0] < 0) || (pos[1] < Constants.BOARD_LIMIT) ||\n  (pos[0] >= Constants.DIM_X) || (pos[1] >= Constants.DIM_Y) ) {\n    result = true;\n  }\n\n  Constants.TREE_POSITIONS[this.level-1].forEach( function (pos2) {\n    if (pos[0] === pos2[0] && pos[1] === pos2[1]){\n      result = true;\n    }\n  });\n\n  return result;\n};\n\nGame.prototype.moveCars = function (delta) {\n  this.cars.forEach(function (car) {\n    car.move(delta);\n  });\n};\n\nGame.prototype.remove = function (object) {\n  if (object.type === \"Car\") {\n    const idx = this.cars.indexOf(object);\n    this.cars[idx] = new Car({ game: this, carType: undefined });\n  } else if (object.type === \"Cat\") {\n    alert(\"Cat died!\");\n    this.cat = undefined;\n  } else {\n    throw \"Invalid object type\";\n  }\n};\n\nGame.prototype.step = function (delta, callback) {\n  this.moveCars(delta);\n  this.checkCollisions(callback);\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const Util = require(\"./util\");\nconst MovingObject = require(\"./movingObject\");\nconst Cat = require(\"./cat\");\nconst Constants = require(\"./constants.js\");\n\nconst DIRECTIONS = [\n\t\"LEFT\",\n\t\"RIGHT\"\n];\n\n//Game has 11 rows; first is start, last is checkpoint/home\n//left number is left edge, right number is right edge\n//could be refactored to sync with game\nconst LEFT = 0; //Could be buffered to center\nconst RIGHT = Constants.DIM_X;\nconst TOP = 0;\nconst BOTTOM = Constants.DIM_Y;\n\nfunction randomPosition(direction, level){\n\tconst row = random(Constants.ROWS[level]);\n\tlet x,y;\n\n\tif (direction[0] < 0) {\n\t\tx = RIGHT;\n\t} else {\n\t\tx = LEFT;\n\t}\n\n\ty = BOTTOM - 50*(row+1); //offset because first row is safe\n\treturn [x,y];\n}\n\n//Gives random element/value of object or array\nfunction random(input){\n\tif (Array.isArray(input)){\n\t\treturn (input[Math.floor(Math.random()*input.length)]);\n\t} else {\n\t\treturn (input[random(Object.keys(input))]);\n\t}\n}\n\nconst Car = function (options = {}) {\n\tthis.type = \"Car\";\n\tthis.carType = options.carType ? options.carType : random(Constants.TYPES);\n\toptions.vel = [this.carType.SPEED, 0];\n\toptions.img = new Image();\n\tif (random(DIRECTIONS) === \"LEFT\"){\n\t\toptions.vel = [options.vel[0]*-1, options.vel[1]*-1];\n\t\toptions.img.src = this.carType.LEFT_IMG;\n\t} else {\n\t\toptions.img.src = this.carType.RIGHT_IMG;\n\t}\n\n\toptions.pos = randomPosition(options.vel, options.game.level);\n\n  MovingObject.call(this, options);\n};\n\nUtil.inherits(Car, MovingObject);\n\nmodule.exports = Car;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/car.js\n ** module id = 2\n ** module chunks = 0\n **/","const Util = {\n  // Normalize the length of the vector to 1, maintaining direction.\n  dir: function (vec) {\n    const norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n  // Find distance between two points.\n  dist: function (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  // Find the length of the vector.\n  norm: function (vec) {\n    return Util.dist([0, 0], vec);\n  },\n  // Return a vector pointing left/right with the given length.\n  randomVec: function (length) {\n    const deg = Math.PI * (Math.floor(Math.random()*2));\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n  // Scale the length of a vector by the given amount.\n  scale: function (vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n  //assumes objects are 50x50. Collide if x within 50, same y\n  checkCollide(pos1, pos2){\n    if (Math.abs(pos1[0] - pos2[0]) < 50 &&\n      pos1[1] === pos2[1]){\n\n      return true;\n    } else {\n      return false;\n    }\n  },\n  inherits: function (ChildClass, BaseClass) {\n    function Surrogate () { this.constructor = ChildClass; }\n    Surrogate.prototype = BaseClass.prototype;\n    ChildClass.prototype = new Surrogate();\n  },\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 3\n ** module chunks = 0\n **/","const Util = require(\"./util\");\nconst Constants = require(\"./constants.js\");\n\nconst MovingObject = function (options) {\n  this.pos = options.pos; //top-left corner of object\n  this.vel = options.vel; //pusheen has instantaneous velocity\n  this.img = options.img;\n  this.game = options.game;\n};\n\n//draws objects of size 50x50\nMovingObject.prototype.draw = function (ctx) {\n  ctx.drawImage(this.img, this.pos[0], this.pos[1], 50, 50);\n};\n\nMovingObject.prototype.isCollidedWith = function (otherObject) {\n  if (Util.checkCollide(this.pos, otherObject.pos)){\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nMovingObject.prototype.move = function (timeDelta) {\n  //timeDelta is number of milliseconds since last move\n  //if the computer is busy the time delta will be larger\n  //in this case the MovingObject should move farther in this frame\n  //velocity of object is how far it should move in 1/60th of a second\n  const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n      offsetX = this.vel[0] * velocityScale,\n      offsetY = this.vel[1] * velocityScale;\n\n  this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n\n  //this is overriden for the Cat so that it is not removed\n  //checks both top-left and bottom-right corner are off-screen\n  if (this.game.isOutOfBounds(this.pos) &&\n  this.game.isOutOfBounds([this.pos[0]+50, this.pos[1]+50])) {\n    this.remove(this);\n  }\n};\n\nMovingObject.prototype.remove = function () {\n  this.game.remove(this);\n};\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/movingObject.js\n ** module id = 4\n ** module chunks = 0\n **/","const Constants = {\n  BACKGROUND: \"#000000\",\n  DIM_X: 550,\n  DIM_Y: 550,\n  FPS: 32,\n  NUM_CARS: 10,\n  MAX_LVL: 3,\n\n  //leave space for header\n  BOARD_LIMIT: 0,\n\n  //placed here so a car type can be made based on level\n  TYPES: {\n    CAR: {\n      LEFT_IMG: \"./img/car_left.png\",\n      RIGHT_IMG: \"./img/car_right.png\",\n      SPEED: 1\n    },\n    FAST_CAR: {\n      LEFT_IMG: \"./img/car_fast_left.png\",\n      RIGHT_IMG: \"./img/car_fast_right.png\",\n      SPEED: 2\n    },\n    SUPER_FAST_CAR: {\n      LEFT_IMG: \"./img/car_superfast_left.png\",\n      RIGHT_IMG: \"./img/car_superfast_right.png\",\n      SPEED: 3\n    }\n  },\n\n  //STREET rows\n  ROWS: {\n    1: [1,3,5,7,9],\n    2: [1,2,4,5,7,8,9],\n    3: [1,2,3,4,5,6,7,8,9]\n  },\n\n  //Cannot reference this.DIM_X for some reason\n  START_POS: [225, 500],\n  REWARD_POS: [225, 0],\n  REWARD: [\"can food\", \"cake\", \"home\"],\n  REWARD_URL: [\"./img/can_food\", \"./img/cake\", \"./img/home\"],\n  WIN_URL: \"./img/pusheen_with_mom.jpg\",\n  TREE_URL: \"./img/tree.png\",\n  TREE_POSITIONS: [[[225, 200]],[[225, 200]],[[]]]\n};\n\nmodule.exports = Constants;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/constants.js\n ** module id = 5\n ** module chunks = 0\n **/","const MovingObject = require(\"./movingObject\");\nconst Util = require(\"./util\");\nconst Constants = require(\"./constants.js\");\n\nconst Cat = function (options) {\n  this.type = \"Cat\";\n  this.game = options.game;\n  options.vel = [0, 0];\n  options.img = new Image;\n\n  let START = [];\n  START.push(Constants.START_POS[0]);\n  START.push(Constants.START_POS[1]);\n  options.pos = START;\n\n  options.img.src = \"./img/pusheen_right.png\";\n\n  //functions defined here since it's wiped as a prototype\n  this.trot = function (movement) {\n    let x = this.pos[0] + movement[0];\n    let y = this.pos[1] + movement[1];\n    if (!this.game.isOutOfBounds([x,y])){\n      this.pos[0] = x;\n      this.pos[1] = y;\n\n      if (movement[0] > 0) {\n        this.img.src = \"./img/pusheen_right.png\";\n      } else if (movement[0] < 0) {\n        this.img.src = \"./img/pusheen_left.png\";\n      }\n    }\n  };\n\n  this.restart = function () {\n    let START2 = [];\n    START2.push(Constants.START_POS[0]);\n    START2.push(Constants.START_POS[1]);\n\n    this.pos = START2;\n  };\n\n  MovingObject.call(this, options);\n};\n\nUtil.inherits(Cat, MovingObject);\n\nmodule.exports = Cat;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/cat.js\n ** module id = 6\n ** module chunks = 0\n **/","const Constants = require(\"./constants.js\");\n\nconst Board = function (game) {\n  this.game = game;\n};\n\nBoard.STREET = new Image();\nBoard.STREET.src = \"./img/grass.jpg\";\n\nBoard.GRASS = new Image();\nBoard.GRASS.src = \"./img/road.jpg\";\n\nBoard.prototype.draw = function (ctx) {\n  const rows = this.game.gridSize[1];\n  const cols = this.game.gridSize[0];\n\n  for (let i = 0; i < rows; i++) {\n    if (Constants.ROWS[this.game.level].indexOf(i) !== -1) {\n      paintRow(ctx,Board.GRASS, cols, i);\n    } else {\n      paintRow(ctx,Board.STREET, cols, i);\n    }\n  }\n\n  renderTrees(ctx, this.game.level);\n  renderReward(ctx,this.game.level);\n};\n\nfunction paintRow(ctx,img, cols, row){\n  for (let i = 0; i < cols; i++) {\n    ctx.drawImage(img, i*50, Constants.DIM_Y - ((row+1)*50));\n  }\n}\n\nfunction renderReward(ctx,level){\n  let img = new Image();\n\n  img.src = Constants.REWARD_URL[level-1];\n\n  ctx.drawImage(img, Constants.REWARD_POS[0], Constants.REWARD_POS[1]);\n}\n\nfunction renderTrees(ctx, level){\n  let img = new Image();\n\n  img.src = Constants.TREE_URL;\n\n  Constants.TREE_POSITIONS[level-1].forEach(function(pos){\n    ctx.drawImage(img, pos[0], pos[1]);\n  });\n}\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/board.js\n ** module id = 7\n ** module chunks = 0\n **/","const Cat = require(\"./cat.js\");\nconst Constants = require(\"./constants.js\");\nconst GameVariables = require(\"./gameVariables.js\");\n\nconst GameView = function (game, ctx) {\n  this.ctx = ctx;\n  this.game = game;\n  this.win = false;\n};\n\nGameView.MOVES = {\n  \"w\": [ 0, -50],\n  \"a\": [-50,  0],\n  \"s\": [ 0,  50],\n  \"d\": [ 50,  0],\n};\n\nGameView.prototype.bindKeyHandlers = function () {\n  const cat = this.game.cat;\n\n  Object.keys(GameView.MOVES).forEach(function (k) {\n    const move = GameView.MOVES[k];\n    key(k, function () { cat.trot(move); }); //keymaster\n  });\n};\n\nGameView.prototype.checkWin = function () {\n  if (this.game.cat.pos[0] === Constants.REWARD_POS[0] &&\n  this.game.cat.pos[1] === Constants.REWARD_POS[1]){\n    if (this.game.level < Constants.MAX_LVL){\n      this.renderReward();\n    } else {\n      this.win = true;\n    }\n  }\n};\n\nGameView.prototype.renderReward = function () {\n  alert(`Pusheen has found ${Constants.REWARD[this.game.level-1]}! Nom nom nom!`);\n  this.game.level += 1;\n  this.game.resetCars();\n  this.game.cat.restart();\n\n  GameVariables.level.innerHTML = `${this.game.level}`;\n};\n\nGameView.prototype.triggerWin = function () {\n  let winImg = new Image();\n  winImg.src = Constants.WIN_URL;\n\n  const that = this;\n\n  window.clearInterval(GameVariables.timer);\n\n  if (GameVariables.sec < GameVariables.bestTime){\n    GameVariables.bestTime = GameVariables.sec;\n    GameVariables.bestTimeDiv.innerHTML = GameVariables.bestTime;\n  }\n\n  winImg.addEventListener(\"load\", function() {\n    that.ctx.drawImage(winImg, 100, 100, 235, 252);\n\n    alert(\"Pusheen has arrived home to his mother! Yay!\");\n  });\n  //replace this with a restart menu later\n  // this.game.level = 1;\n  // this.game.resetCars();\n  // this.game.cat.restart();\n};\n\nGameView.prototype.gameOver = function () {\n  alert(\"Pusheen got run over! :( Game will reset.\");\n  this.game.level = 1;\n  this.game.resetCars();\n  this.game.cat.restart();\n  GameVariables.sec = 0;\n\n  GameVariables.level.innerHTML = `${this.game.level}`;\n};\n\nGameView.prototype.start = function () {\n  this.bindKeyHandlers();\n  this.lastTime = 0;\n  //start the animation\n  requestAnimationFrame(this.animate.bind(this));\n\n  GameVariables.level.innerHTML = `${this.game.level}`;\n\n  //TODO SET UP RESTART LOGIC HERE; possibly setup a callback for winning\n};\n\nGameView.prototype.animate = function(time){\n  const timeDelta = time - this.lastTime;\n  const that = this;\n\n  this.game.step(timeDelta, this.gameOver.bind(this));\n  this.game.draw(this.ctx);\n  //ensure he sits on his reward first!\n  window.setTimeout(this.checkWin.bind(this), 100);\n  this.lastTime = time;\n  //every call to animate requests causes another call to animate\n  if (that.win === false) {\n    requestAnimationFrame(that.animate.bind(that));\n  } else {\n    that.triggerWin();\n  }\n};\n\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameView.js\n ** module id = 8\n ** module chunks = 0\n **/","const GameVariables = {\n  timer: function(){},\n  sec: 0,\n  level: 0,\n  bestTimeDiv: function(){},\n  bestTime: 100\n};\n\nmodule.exports = GameVariables;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameVariables.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}